### This is the file 'mapsBatch1.txt'

makeNewRoot MyRootELEMENT
saveTo !YAMLROOT

useAsInput MyRootELEMENT: ""
yaml --insert MyRootELEMENT "dlfkjhasdlfhasdfadsfafsdfasdfasdfasdfasdf"
print -

useAsInput MyRootELEMENT: ""
yaml --insert MyRootELEMENT.subElem "dlfkjhasdlfhasdfadsfafsdfasdfasdfasdfasdf"
print -

useAsInput MyRootELEMENT: ""
yaml --insert MyRootELEMENT.subElem.leafElem '{State: "available", Messages: [A,B,C], RegionName: "eu-north-1", ZoneName: "eu-north-1c", ZoneId: "eun1-az3"}'
print -

useAsInput   '{"AdditionalRootElement": {"State": "available", "Messages": [A,B,C], "RegionName": "eu-north-1", "ZoneName": "eu-north-1c", "ZoneId": "eun1-az3"}}'
print -
saveTo !AdditionalRootElement

useAsInput !YAMLROOT
saveTo !DUPLICATEROOT ### Do Not contaminate YAMLROOT with a new top-level-element called "AdditionalRootElement"
	## Even if you do NOT saveAs !YAMLROOT.. no matter, due to Java properties using memory-references, it's contaminated by the following 2 commands.
yaml --insert /  !AdditionalRootElement
print -

//--------------------------------------------------
aws.sdk --list-regions

//--------------------------------------------------
foreach
	print ${ASUX::foreach.iteration.value}
	aws.sdk   --describe-AZs      ${ASUX::foreach.iteration.value}
	saveTo !AZDETAILS   ### Save the contents of ${ASUX::foreach.iteration.value} into AZDETAILS

	#________ makeNewRoot MyCompositeELEMENT-${ASUX::foreach.index}
	#________ yaml --insert MyCompositeELEMENT-${ASUX::foreach.index} !AZDETAILS --delimiter ,
	#________ saveTo !MyCompositeELEMENT-${ASUX::foreach.index}
	#________ useAsInput !YAMLROOT
	#________ yaml --insert MyRootELEMENT,MyCompositeELEMENT-${ASUX::foreach.index} !MyCompositeELEMENT-${ASUX::foreach.index} --delimiter ,

	useAsInput !YAMLROOT
	yaml --insert MyRootELEMENT,MyCompositeELEMENT-${ASUX::foreach.index} !AZDETAILS --delimiter ,
	saveTo !YAMLROOT
	#________ print !YAMLROOT 
end
print \n

#EoF
